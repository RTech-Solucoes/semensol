<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/globals.css">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/globals.css" />
              <option name="originalContent" value="@tailwind base;&#10;@tailwind components;&#10;@tailwind utilities;&#10;&#10;/* Primary Color Configuration - Change here to update throughout the app */&#10;:root {&#10;  --primary-hue: 30;&#10;  --primary-saturation: 45%;&#10;  --primary-lightness: 35%;&#10;}&#10;&#10;:root {&#10;  --foreground-rgb: 0, 0, 0;&#10;  --background-start-rgb: 214, 219, 220;&#10;  --background-end-rgb: 255, 255, 255;&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  :root {&#10;    --foreground-rgb: 255, 255, 255;&#10;    --background-start-rgb: 0, 0, 0;&#10;    --background-end-rgb: 0, 0, 0;&#10;  }&#10;}&#10;&#10;@layer base {&#10;  :root {&#10;    --background: 0 0% 100%;&#10;    --foreground: 0 0% 3.9%;&#10;    --card: 0 0% 100%;&#10;    --card-foreground: 0 0% 3.9%;&#10;    --popover: 0 0% 100%;&#10;    --popover-foreground: 0 0% 3.9%;&#10;    --primary: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);&#10;    --primary-foreground: 0 0% 98%;&#10;    --secondary: 0 0% 96.1%;&#10;    --secondary-foreground: 0 0% 9%;&#10;    --muted: 0 0% 96.1%;&#10;    --muted-foreground: 0 0% 45.1%;&#10;    --accent: 0 0% 96.1%;&#10;    --accent-foreground: 0 0% 9%;&#10;    --destructive: 0 84.2% 60.2%;&#10;    --destructive-foreground: 0 0% 98%;&#10;    --border: 0 0% 89.8%;&#10;    --input: 0 0% 89.8%;&#10;    --ring: 0 0% 3.9%;&#10;    --chart-1: 12 76% 61%;&#10;    --chart-2: 173 58% 39%;&#10;    --chart-3: 197 37% 24%;&#10;    --chart-4: 43 74% 66%;&#10;    --chart-5: 27 87% 67%;&#10;    --radius: 0.75rem;&#10;  }&#10;  .dark {&#10;    --background: 0 0% 3.9%;&#10;    --foreground: 0 0% 98%;&#10;    --card: 0 0% 3.9%;&#10;    --card-foreground: 0 0% 98%;&#10;    --popover: 0 0% 3.9%;&#10;    --popover-foreground: 0 0% 98%;&#10;    --primary: var(--primary-hue) var(--primary-saturation) calc(var(--primary-lightness) + 30%);&#10;    --primary-foreground: 0 0% 9%;&#10;    --secondary: 0 0% 14.9%;&#10;    --secondary-foreground: 0 0% 98%;&#10;    --muted: 0 0% 14.9%;&#10;    --muted-foreground: 0 0% 63.9%;&#10;    --accent: 0 0% 14.9%;&#10;    --accent-foreground: 0 0% 98%;&#10;    --destructive: 0 62.8% 30.6%;&#10;    --destructive-foreground: 0 0% 98%;&#10;    --border: 0 0% 14.9%;&#10;    --input: 0 0% 14.9%;&#10;    --ring: 0 0% 83.1%;&#10;    --chart-1: 220 70% 50%;&#10;    --chart-2: 160 60% 45%;&#10;    --chart-3: 30 80% 55%;&#10;    --chart-4: 280 65% 60%;&#10;    --chart-5: 340 75% 55%;&#10;  }&#10;}&#10;&#10;/* Primary color utilities */&#10;@layer utilities {&#10;  /* Background colors */&#10;  .bg-primary-50 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .bg-primary-100 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .bg-primary-200 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .bg-primary-300 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .bg-primary-400 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .bg-primary-500 { background-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .bg-primary-600 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .bg-primary-700 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .bg-primary-800 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .bg-primary-900 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;  &#10;  /* Text colors */&#10;  .text-primary-50 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .text-primary-100 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .text-primary-200 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .text-primary-300 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .text-primary-400 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .text-primary-500 { color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .text-primary-600 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .text-primary-700 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .text-primary-800 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .text-primary-900 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;  &#10;  /* Border colors */&#10;  .border-primary-50 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .border-primary-100 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .border-primary-200 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .border-primary-300 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .border-primary-400 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .border-primary-500 { border-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .border-primary-600 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .border-primary-700 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .border-primary-800 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .border-primary-900 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;  &#10;  /* Hover states */&#10;  .hover\:bg-primary-50:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .hover\:bg-primary-100:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .hover\:bg-primary-200:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .hover\:bg-primary-300:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .hover\:bg-primary-400:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .hover\:bg-primary-500:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .hover\:bg-primary-600:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .hover\:bg-primary-700:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .hover\:bg-primary-800:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .hover\:bg-primary-900:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;&#10;  /* Gradient utilities */&#10;  /* Linear gradients - to right */&#10;  .bg-gradient-to-r-primary-50 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%), transparent); }&#10;  .bg-gradient-to-r-primary-100 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), transparent); }&#10;  .bg-gradient-to-r-primary-200 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%), transparent); }&#10;  .bg-gradient-to-r-primary-300 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%), transparent); }&#10;  .bg-gradient-to-r-primary-400 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), transparent); }&#10;  .bg-gradient-to-r-primary-500 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), transparent); }&#10;  .bg-gradient-to-r-primary-600 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)), transparent); }&#10;  .bg-gradient-to-r-primary-700 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), transparent); }&#10;  .bg-gradient-to-r-primary-800 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)), transparent); }&#10;  .bg-gradient-to-r-primary-900 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)), transparent); }&#10;&#10;  /* Linear gradients - to bottom */&#10;  .bg-gradient-to-b-primary-50 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%), transparent); }&#10;  .bg-gradient-to-b-primary-100 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), transparent); }&#10;  .bg-gradient-to-b-primary-200 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%), transparent); }&#10;  .bg-gradient-to-b-primary-300 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%), transparent); }&#10;  .bg-gradient-to-b-primary-400 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), transparent); }&#10;  .bg-gradient-to-b-primary-500 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), transparent); }&#10;  .bg-gradient-to-b-primary-600 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)), transparent); }&#10;  .bg-gradient-to-b-primary-700 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), transparent); }&#10;  .bg-gradient-to-b-primary-800 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)), transparent); }&#10;  .bg-gradient-to-b-primary-900 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)), transparent); }&#10;&#10;  /* Primary color combinations */&#10;  .bg-gradient-primary-light { background: linear-gradient(135deg, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%)); }&#10;  .bg-gradient-primary { background: linear-gradient(135deg, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%)); }&#10;  .bg-gradient-primary-dark { background: linear-gradient(135deg, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%))); }&#10;&#10;  /* Radial gradients */&#10;  .bg-radial-gradient-primary-50 { background: radial-gradient(circle, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%), transparent); }&#10;  .bg-radial-gradient-primary-100 { background: radial-gradient(circle, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), transparent); }&#10;  .bg-radial-gradient-primary-500 { background: radial-gradient(circle, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), transparent); }&#10;  .bg-radial-gradient-primary { background: radial-gradient(circle at center, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), transparent); }&#10;&#10;  /* Conic gradients */&#10;  .bg-conic-gradient-primary { background: conic-gradient(from 0deg, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness))); }&#10;}&#10;.brick-animation:hover {&#10;  @apply&#10;  -translate-x-1&#10;  -translate-y-1;&#10;   box-shadow: 4px 4px 0 hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%);&#10;}&#10;&#10;.brick-animation:active {&#10;  @apply translate-x-0 translate-y-0 shadow-none;&#10;}&#10;&#10;@layer base {&#10;  * {&#10;    @apply border-border;&#10;  }&#10;  body {&#10;    @apply bg-background text-foreground;&#10;    font-feature-settings: &quot;rlig&quot; 1, &quot;calt&quot; 1;&#10;  }&#10;}&#10;&#10;@layer utilities {&#10;  .animate-fade-in {&#10;    animation: fadeIn 0.5s ease-in-out;&#10;  }&#10;  &#10;  @keyframes fadeIn {&#10;    from {&#10;      opacity: 0;&#10;    }&#10;    to {&#10;      opacity: 1;&#10;    }&#10;  }&#10;}&#10;&#10;.waves-background {&#10;  background-image: url('/images/background.svg');&#10;}" />
              <option name="updatedContent" value="@tailwind base;&#10;@tailwind components;&#10;@tailwind utilities;&#10;&#10;/* Primary Color Configuration - Change here to update throughout the app */&#10;:root {&#10;  --primary-hue: 30;&#10;  --primary-saturation: 45%;&#10;  --primary-lightness: 35%;&#10;}&#10;&#10;:root {&#10;  --foreground-rgb: 0, 0, 0;&#10;  --background-start-rgb: 214, 219, 220;&#10;  --background-end-rgb: 255, 255, 255;&#10;}&#10;&#10;@media (prefers-color-scheme: dark) {&#10;  :root {&#10;    --foreground-rgb: 255, 255, 255;&#10;    --background-start-rgb: 0, 0, 0;&#10;    --background-end-rgb: 0, 0, 0;&#10;  }&#10;}&#10;&#10;@layer base {&#10;  :root {&#10;    --background: 0 0% 100%;&#10;    --foreground: 0 0% 3.9%;&#10;    --card: 0 0% 100%;&#10;    --card-foreground: 0 0% 3.9%;&#10;    --popover: 0 0% 100%;&#10;    --popover-foreground: 0 0% 3.9%;&#10;    --primary: var(--primary-hue) var(--primary-saturation) var(--primary-lightness);&#10;    --primary-foreground: 0 0% 98%;&#10;    --secondary: 0 0% 96.1%;&#10;    --secondary-foreground: 0 0% 9%;&#10;    --muted: 0 0% 96.1%;&#10;    --muted-foreground: 0 0% 45.1%;&#10;    --accent: 0 0% 96.1%;&#10;    --accent-foreground: 0 0% 9%;&#10;    --destructive: 0 84.2% 60.2%;&#10;    --destructive-foreground: 0 0% 98%;&#10;    --border: 0 0% 89.8%;&#10;    --input: 0 0% 89.8%;&#10;    --ring: 0 0% 3.9%;&#10;    --chart-1: 12 76% 61%;&#10;    --chart-2: 173 58% 39%;&#10;    --chart-3: 197 37% 24%;&#10;    --chart-4: 43 74% 66%;&#10;    --chart-5: 27 87% 67%;&#10;    --radius: 0.75rem;&#10;  }&#10;  .dark {&#10;    --background: 0 0% 3.9%;&#10;    --foreground: 0 0% 98%;&#10;    --card: 0 0% 3.9%;&#10;    --card-foreground: 0 0% 98%;&#10;    --popover: 0 0% 3.9%;&#10;    --popover-foreground: 0 0% 98%;&#10;    --primary: var(--primary-hue) var(--primary-saturation) calc(var(--primary-lightness) + 30%);&#10;    --primary-foreground: 0 0% 9%;&#10;    --secondary: 0 0% 14.9%;&#10;    --secondary-foreground: 0 0% 98%;&#10;    --muted: 0 0% 14.9%;&#10;    --muted-foreground: 0 0% 63.9%;&#10;    --accent: 0 0% 14.9%;&#10;    --accent-foreground: 0 0% 98%;&#10;    --destructive: 0 62.8% 30.6%;&#10;    --destructive-foreground: 0 0% 98%;&#10;    --border: 0 0% 14.9%;&#10;    --input: 0 0% 14.9%;&#10;    --ring: 0 0% 83.1%;&#10;    --chart-1: 220 70% 50%;&#10;    --chart-2: 160 60% 45%;&#10;    --chart-3: 30 80% 55%;&#10;    --chart-4: 280 65% 60%;&#10;    --chart-5: 340 75% 55%;&#10;  }&#10;}&#10;&#10;/* Primary color utilities */&#10;@layer utilities {&#10;  /* Background colors */&#10;  .bg-primary-50 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .bg-primary-100 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .bg-primary-200 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .bg-primary-300 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .bg-primary-400 { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .bg-primary-500 { background-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .bg-primary-600 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .bg-primary-700 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .bg-primary-800 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .bg-primary-900 { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;  &#10;  /* Text colors */&#10;  .text-primary-50 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .text-primary-100 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .text-primary-200 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .text-primary-300 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .text-primary-400 { color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .text-primary-500 { color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .text-primary-600 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .text-primary-700 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .text-primary-800 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .text-primary-900 { color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;  &#10;  /* Border colors */&#10;  .border-primary-50 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .border-primary-100 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .border-primary-200 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .border-primary-300 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .border-primary-400 { border-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .border-primary-500 { border-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .border-primary-600 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .border-primary-700 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .border-primary-800 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .border-primary-900 { border-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;  &#10;  /* Hover states */&#10;  .hover\:bg-primary-50:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%); }&#10;  .hover\:bg-primary-100:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%); }&#10;  .hover\:bg-primary-200:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%); }&#10;  .hover\:bg-primary-300:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%); }&#10;  .hover\:bg-primary-400:hover { background-color: hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%); }&#10;  .hover\:bg-primary-500:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)); }&#10;  .hover\:bg-primary-600:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)); }&#10;  .hover\:bg-primary-700:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)); }&#10;  .hover\:bg-primary-800:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)); }&#10;  .hover\:bg-primary-900:hover { background-color: hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)); }&#10;&#10;  /* Gradient utilities */&#10;  /* Linear gradients - to right */&#10;  .bg-gradient-to-r-primary-50 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%), transparent); }&#10;  .bg-gradient-to-r-primary-100 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), transparent); }&#10;  .bg-gradient-to-r-primary-200 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%), transparent); }&#10;  .bg-gradient-to-r-primary-300 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%), transparent); }&#10;  .bg-gradient-to-r-primary-400 { background: linear-gradient(to right, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), transparent); }&#10;  .bg-gradient-to-r-primary-500 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), transparent); }&#10;  .bg-gradient-to-r-primary-600 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)), transparent); }&#10;  .bg-gradient-to-r-primary-700 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), transparent); }&#10;  .bg-gradient-to-r-primary-800 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)), transparent); }&#10;  .bg-gradient-to-r-primary-900 { background: linear-gradient(to right, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)), transparent); }&#10;&#10;  /* Linear gradients - to bottom */&#10;  .bg-gradient-to-b-primary-50 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%), transparent); }&#10;  .bg-gradient-to-b-primary-100 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), transparent); }&#10;  .bg-gradient-to-b-primary-200 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.6), 87%), transparent); }&#10;  .bg-gradient-to-b-primary-300 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%), transparent); }&#10;  .bg-gradient-to-b-primary-400 { background: linear-gradient(to bottom, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), transparent); }&#10;  .bg-gradient-to-b-primary-500 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), transparent); }&#10;  .bg-gradient-to-b-primary-600 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 5%)), transparent); }&#10;  .bg-gradient-to-b-primary-700 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), transparent); }&#10;  .bg-gradient-to-b-primary-800 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 15%)), transparent); }&#10;  .bg-gradient-to-b-primary-900 { background: linear-gradient(to bottom, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%)), transparent); }&#10;&#10;  /* Primary color combinations */&#10;  .bg-gradient-primary-light { background: linear-gradient(135deg, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%)); }&#10;  .bg-gradient-primary { background: linear-gradient(135deg, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%)); }&#10;  .bg-gradient-primary-dark { background: linear-gradient(135deg, hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 20%))); }&#10;&#10;  /* Radial gradients */&#10;  .bg-radial-gradient-primary-50 { background: radial-gradient(circle, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.3), 97%), transparent); }&#10;  .bg-radial-gradient-primary-100 { background: radial-gradient(circle, hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.5), 92%), transparent); }&#10;  .bg-radial-gradient-primary-500 { background: radial-gradient(circle, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), transparent); }&#10;  .bg-radial-gradient-primary { background: radial-gradient(circle at center, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), transparent); }&#10;&#10;  /* Conic gradients */&#10;  .bg-conic-gradient-primary { background: conic-gradient(from 0deg, hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness)), hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.8), 65%), hsl(var(--primary-hue), var(--primary-saturation), calc(var(--primary-lightness) - 10%)), hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness))); }&#10;}&#10;.brick-animation:hover {&#10;  @apply&#10;  -translate-x-1&#10;  -translate-y-1;&#10;   box-shadow: 4px 4px 0 hsl(var(--primary-hue), calc(var(--primary-saturation) * 0.7), 80%);&#10;}&#10;&#10;.brick-animation:active {&#10;  @apply translate-x-0 translate-y-0 shadow-none;&#10;}&#10;&#10;@layer base {&#10;  * {&#10;    @apply border-border;&#10;  }&#10;  body {&#10;    @apply bg-background text-foreground;&#10;    font-feature-settings: &quot;rlig&quot; 1, &quot;calt&quot; 1;&#10;  }&#10;}&#10;&#10;@layer utilities {&#10;  .animate-fade-in {&#10;    animation: fadeIn 0.5s ease-in-out;&#10;  }&#10;  &#10;  @keyframes fadeIn {&#10;    from {&#10;      opacity: 0;&#10;    }&#10;    to {&#10;      opacity: 1;&#10;    }&#10;  }&#10;}&#10;&#10;.waves-background {&#10;  background-image: url('/images/background.svg');&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/dashboard/dashboard.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/dashboard/dashboard.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import {Card, CardContent, CardHeader, CardTitle} from &quot;@/components/ui/card&quot;;&#10;import {Button} from &quot;@/components/ui/button&quot;;&#10;import {Badge} from &quot;@/components/ui/badge&quot;;&#10;import {Activity, CheckCircle, Clock, Handshake, IdCardLanyard, TrendingUp, Truck, Weight, Zap,} from &quot;lucide-react&quot;;&#10;import {cn} from &quot;@/lib/utils&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export function Dashboard() {&#10;&#10;  const quickActions = [&#10;    {&#10;      title: &quot;Iniciar Pesagem&quot;,&#10;      description: &quot;Iniciar novo ciclo de pesagem&quot;,&#10;      icon: Weight,&#10;      color: &quot;green&quot;,&#10;      href: &quot;/weighing&quot;,&#10;    },&#10;    {&#10;      title: &quot;Gerenciar Frota&quot;,&#10;      description: &quot;Cadastrar e gerenciar veículos da frota&quot;,&#10;      icon: Truck,&#10;      color: &quot;blue&quot;,&#10;      href: &quot;/fleet&quot;,&#10;    },&#10;    {&#10;      title: &quot;Motoristas&quot;,&#10;      description: &quot;Cadastrar e gerenciar motoristas&quot;,&#10;      icon: IdCardLanyard,&#10;      color: &quot;orange&quot;,&#10;      href: &quot;/drivers&quot;,&#10;    },&#10;    {&#10;      title: &quot;Parceiros&quot;,&#10;      description: &quot;Gerenciar empresas parceiras&quot;,&#10;      icon: Handshake,&#10;      color: &quot;purple&quot;,&#10;      href: &quot;/partners&quot;,&#10;    },&#10;  ];&#10;&#10;  const recentActivity = [&#10;    {&#10;      id: 1,&#10;      type: &quot;completed&quot;,&#10;      title: &quot;Pesagem concluída - ABC-1234 (Soja)&quot;,&#10;      time: &quot;14:32&quot;,&#10;      status: &quot;Concluído&quot;,&#10;    },&#10;    {&#10;      id: 2,&#10;      type: &quot;started&quot;,&#10;      title: &quot;Nova pesagem iniciada - DEF-5678 (Milho)&quot;,&#10;      time: &quot;14:28&quot;,&#10;      status: &quot;Em andamento&quot;,&#10;    },&#10;    {&#10;      id: 3,&#10;      type: &quot;registered&quot;,&#10;      title: &quot;Novo motorista cadastrado - Carlos Lima&quot;,&#10;      time: &quot;13:45&quot;,&#10;      status: &quot;Concluído&quot;,&#10;    },&#10;  ];&#10;&#10;  const systemStatus = [&#10;    {name: &quot;Balança R1&quot;, status: &quot;Online&quot;},&#10;    {name: &quot;Balança R2&quot;, status: &quot;Offline&quot;},&#10;  ];&#10;&#10;  return (&#10;    &lt;div className=&quot;flex flex-col w-full space-y-8 animate-fade-in&quot;&gt;&#10;      &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;h1 className=&quot;text-3xl font-bold tracking-tight text-white&quot;&gt;&#10;            Dashboard&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;text-gray-200 mt-1&quot;&gt;&#10;            Visão geral das operações de pesagem e logística&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;flex gap-3&quot;&gt;&#10;          &lt;Button className=&quot;bg-black hover:bg-black/70&quot;&gt;&#10;            &lt;Weight className=&quot;h-4 w-4 mr-2&quot;/&gt;&#10;            Nova Pesagem&#10;          &lt;/Button&gt;&#10;          &lt;Button variant=&quot;outline&quot;&gt;&#10;            &lt;TrendingUp className=&quot;h-4 w-4 mr-2&quot;/&gt;&#10;            Relatórios&#10;          &lt;/Button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;Card className=&quot;grid grid-cols-1 lg:grid-cols-3&quot;&gt;&#10;        &lt;div className=&quot;flex flex-col lg:col-span-2 border-r&quot;&gt;&#10;          &lt;CardHeader className=&quot;flex flex-row items-center justify-between&quot;&gt;&#10;            &lt;CardTitle className=&quot;text-lg font-semibold flex items-center gap-2&quot;&gt;&#10;              &lt;Zap className=&quot;h-5 w-5 text-primary-600&quot;/&gt;&#10;              Ações Rápidas&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;h-full&quot;&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 h-full gap-4 sm:grid-cols-2&quot;&gt;&#10;              {quickActions.map((action, index) =&gt; (&#10;                &lt;Link&#10;                  href={action.href}&#10;                  key={index}&#10;                  className=&quot;&#10;                      flex gap-4 items-center p-6 relative overflow-hidden&#10;                      rounded-2xl border-2 border-dashed border-primary-300&#10;                      transition-all duration-200&#10;                      cursor-pointer brick-animation&#10;                      hover:border-solid hover:bg-primary-100&#10;                      group&#10;                    &quot;&#10;                &gt;&#10;                  &lt;div className=&quot;&#10;                      flex items-center justify-center bg-primary-100&#10;                      flex-shrink-0 h-16 w-16 rounded-2xl&#10;                      transition-all duration-200 z-10&#10;                      group-hover:bg-transparent&#10;                    &quot;&gt;&#10;                    &lt;action.icon className=&quot;&#10;                        h-10 w-10 text-primary-600 transition-all duration-200&#10;                        group-hover:h-16 group-hover:w-16&#10;                      &quot;/&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;absolute -top-4 -right-4&quot;&gt;&#10;                    &lt;action.icon&#10;                      className=&quot;&#10;                          text-primary-300&#10;                          h-16 w-16&#10;                        &quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex flex-col transition-all duration-200 z-10&quot;&gt;&#10;                    &lt;h3 className=&quot;text-xl font-semibold text-gray-900&quot;&gt;&#10;                      {action.title}&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-lg text-gray-600&quot;&gt;&#10;                      {action.description}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/Link&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;div className=&quot;h-fit border-b&quot;&gt;&#10;            &lt;CardHeader&gt;&#10;              &lt;CardTitle className=&quot;text-lg font-semibold flex items-center gap-2&quot;&gt;&#10;                &lt;Clock className=&quot;h-5 w-5 text-primary-600&quot;/&gt;&#10;                Atividade Recente&#10;              &lt;/CardTitle&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;space-y-4&quot;&gt;&#10;                {recentActivity.map((activity) =&gt; (&#10;                  &lt;div key={activity.id} className=&quot;flex items-start gap-3&quot;&gt;&#10;                    &lt;div&#10;                      className={`h-2 w-2 rounded-full mt-2 bg-primary-500`}&#10;                    /&gt;&#10;                    &lt;div className=&quot;flex flex-col&quot;&gt;&#10;                      &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                        &lt;p className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                          {activity.title}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mt-1&quot;&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-500&quot;&gt;{activity.time}&lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;Badge&#10;                      className={cn(&#10;                        &quot;text-xs p-1 ml-auto&quot;,&#10;                        activity.status === &quot;Concluído&quot;&#10;                          ? &quot;bg-green-100 text-green-700&quot;&#10;                          : &quot;bg-amber-100 text-amber-700&quot;&#10;                      )}&#10;                    &gt;&#10;                      {&#10;                        activity.status === &quot;Concluído&quot;&#10;                          ? &lt;CheckCircle className=&quot;w-4 h-4&quot;/&gt;&#10;                          : &lt;Clock className=&quot;w-4 h-4&quot;/&gt;&#10;                      }&#10;                    &lt;/Badge&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/div&gt;&#10;          &lt;div&gt;&#10;            &lt;CardHeader&gt;&#10;              &lt;CardTitle className=&quot;text-lg font-semibold flex items-center gap-2&quot;&gt;&#10;                &lt;Activity className=&quot;h-5 w-5 text-primary-600&quot;/&gt;&#10;                Status do Sistema&#10;              &lt;/CardTitle&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;space-y-3&quot;&gt;&#10;                {systemStatus.map((system, index) =&gt; (&#10;                  &lt;div key={index} className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                      {system.name}&#10;                    &lt;/span&gt;&#10;                    &lt;Badge&#10;                      variant=&quot;secondary&quot;&#10;                      className={`flex gap-1 text-xs ${&#10;                        system.status === &quot;Online&quot;&#10;                          ? &quot;bg-green-100 text-green-700&quot;&#10;                          : &quot;bg-red-100 text-red-700&quot;&#10;                      }`}&#10;                    &gt;&#10;                      &lt;div&#10;                        className={cn(&#10;                          &quot;w-1 h-1 rounded-full&quot;,&#10;                          system.status === &quot;Online&quot;&#10;                            ? &quot;bg-green-700&quot;&#10;                            : &quot;bg-red-700&quot;&#10;                        )}&#10;                      /&gt;&#10;                      {system.status}&#10;                    &lt;/Badge&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Card&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import {Card, CardContent, CardHeader, CardTitle} from &quot;@/components/ui/card&quot;;&#10;import {Button} from &quot;@/components/ui/button&quot;;&#10;import {Badge} from &quot;@/components/ui/badge&quot;;&#10;import {Activity, CheckCircle, Clock, Handshake, IdCardLanyard, TrendingUp, Truck, Weight, Zap,} from &quot;lucide-react&quot;;&#10;import {cn} from &quot;@/lib/utils&quot;;&#10;import Link from &quot;next/link&quot;;&#10;&#10;export function Dashboard() {&#10;&#10;  const quickActions = [&#10;    {&#10;      title: &quot;Iniciar Pesagem&quot;,&#10;      description: &quot;Iniciar novo ciclo de pesagem&quot;,&#10;      icon: Weight,&#10;      color: &quot;green&quot;,&#10;      href: &quot;/weighing&quot;,&#10;    },&#10;    {&#10;      title: &quot;Gerenciar Frota&quot;,&#10;      description: &quot;Cadastrar e gerenciar veículos da frota&quot;,&#10;      icon: Truck,&#10;      color: &quot;blue&quot;,&#10;      href: &quot;/fleet&quot;,&#10;    },&#10;    {&#10;      title: &quot;Motoristas&quot;,&#10;      description: &quot;Cadastrar e gerenciar motoristas&quot;,&#10;      icon: IdCardLanyard,&#10;      color: &quot;orange&quot;,&#10;      href: &quot;/drivers&quot;,&#10;    },&#10;    {&#10;      title: &quot;Parceiros&quot;,&#10;      description: &quot;Gerenciar empresas parceiras&quot;,&#10;      icon: Handshake,&#10;      color: &quot;purple&quot;,&#10;      href: &quot;/partners&quot;,&#10;    },&#10;  ];&#10;&#10;  const recentActivity = [&#10;    {&#10;      id: 1,&#10;      type: &quot;completed&quot;,&#10;      title: &quot;Pesagem concluída - ABC-1234 (Soja)&quot;,&#10;      time: &quot;14:32&quot;,&#10;      status: &quot;Concluído&quot;,&#10;    },&#10;    {&#10;      id: 2,&#10;      type: &quot;started&quot;,&#10;      title: &quot;Nova pesagem iniciada - DEF-5678 (Milho)&quot;,&#10;      time: &quot;14:28&quot;,&#10;      status: &quot;Em andamento&quot;,&#10;    },&#10;    {&#10;      id: 3,&#10;      type: &quot;registered&quot;,&#10;      title: &quot;Novo motorista cadastrado - Carlos Lima&quot;,&#10;      time: &quot;13:45&quot;,&#10;      status: &quot;Concluído&quot;,&#10;    },&#10;  ];&#10;&#10;  const systemStatus = [&#10;    {name: &quot;Balança R1&quot;, status: &quot;Online&quot;},&#10;    {name: &quot;Balança R2&quot;, status: &quot;Offline&quot;},&#10;  ];&#10;&#10;  return (&#10;    &lt;div className=&quot;flex flex-col w-full space-y-8 animate-fade-in&quot;&gt;&#10;      &lt;div className=&quot;flex items-center justify-between&quot;&gt;&#10;        &lt;div&gt;&#10;          &lt;h1 className=&quot;text-3xl font-bold tracking-tight text-white&quot;&gt;&#10;            Dashboard&#10;          &lt;/h1&gt;&#10;          &lt;p className=&quot;text-gray-200 mt-1&quot;&gt;&#10;            Visão geral das operações de pesagem e logística&#10;          &lt;/p&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;flex gap-3&quot;&gt;&#10;          &lt;Button className=&quot;bg-black hover:bg-black/70&quot;&gt;&#10;            &lt;Weight className=&quot;h-4 w-4 mr-2&quot;/&gt;&#10;            Nova Pesagem&#10;          &lt;/Button&gt;&#10;          &lt;Button variant=&quot;outline&quot;&gt;&#10;            &lt;TrendingUp className=&quot;h-4 w-4 mr-2&quot;/&gt;&#10;            Relatórios&#10;          &lt;/Button&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;&#10;      &lt;Card className=&quot;grid grid-cols-1 lg:grid-cols-3&quot;&gt;&#10;        &lt;div className=&quot;flex flex-col lg:col-span-2 border-r&quot;&gt;&#10;          &lt;CardHeader className=&quot;flex flex-row items-center justify-between&quot;&gt;&#10;            &lt;CardTitle className=&quot;text-lg font-semibold flex items-center gap-2&quot;&gt;&#10;              &lt;Zap className=&quot;h-5 w-5 text-primary-600&quot;/&gt;&#10;              Ações Rápidas&#10;            &lt;/CardTitle&gt;&#10;          &lt;/CardHeader&gt;&#10;          &lt;CardContent className=&quot;h-full&quot;&gt;&#10;            &lt;div className=&quot;grid grid-cols-1 h-full gap-4 sm:grid-cols-2 grid-rows-[1fr_1fr]&quot;&gt;&#10;              {quickActions.map((action, index) =&gt; (&#10;                &lt;Link&#10;                  href={action.href}&#10;                  key={index}&#10;                  className=&quot;&#10;                      flex gap-4 items-center p-6 relative overflow-hidden&#10;                      rounded-2xl border-2 border-dashed border-primary-300&#10;                      transition-all duration-200&#10;                      cursor-pointer brick-animation&#10;                      hover:border-solid hover:bg-primary-100&#10;                      group&#10;                    &quot;&#10;                &gt;&#10;                  &lt;div className=&quot;&#10;                      flex items-center justify-center bg-primary-100&#10;                      flex-shrink-0 h-16 w-16 rounded-2xl&#10;                      transition-all duration-200 z-10&#10;                      group-hover:bg-transparent&#10;                    &quot;&gt;&#10;                    &lt;action.icon className=&quot;&#10;                        h-10 w-10 text-primary-600 transition-all duration-200&#10;                        group-hover:h-16 group-hover:w-16&#10;                      &quot;/&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;absolute -top-4 -right-4&quot;&gt;&#10;                    &lt;action.icon&#10;                      className=&quot;&#10;                          text-primary-300&#10;                          h-16 w-16&#10;                        &quot;&#10;                    /&gt;&#10;                  &lt;/div&gt;&#10;                  &lt;div className=&quot;flex flex-col transition-all duration-200 z-10&quot;&gt;&#10;                    &lt;h3 className=&quot;text-xl font-semibold text-gray-900&quot;&gt;&#10;                      {action.title}&#10;                    &lt;/h3&gt;&#10;                    &lt;p className=&quot;text-lg text-gray-600&quot;&gt;&#10;                      {action.description}&#10;                    &lt;/p&gt;&#10;                  &lt;/div&gt;&#10;                &lt;/Link&gt;&#10;              ))}&#10;            &lt;/div&gt;&#10;          &lt;/CardContent&gt;&#10;        &lt;/div&gt;&#10;        &lt;div&gt;&#10;          &lt;div className=&quot;h-fit border-b&quot;&gt;&#10;            &lt;CardHeader&gt;&#10;              &lt;CardTitle className=&quot;text-lg font-semibold flex items-center gap-2&quot;&gt;&#10;                &lt;Clock className=&quot;h-5 w-5 text-primary-600&quot;/&gt;&#10;                Atividade Recente&#10;              &lt;/CardTitle&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;space-y-4&quot;&gt;&#10;                {recentActivity.map((activity) =&gt; (&#10;                  &lt;div key={activity.id} className=&quot;flex items-start gap-3&quot;&gt;&#10;                    &lt;div&#10;                      className={`h-2 w-2 rounded-full mt-2 bg-primary-500`}&#10;                    /&gt;&#10;                    &lt;div className=&quot;flex flex-col&quot;&gt;&#10;                      &lt;div className=&quot;flex items-start justify-between&quot;&gt;&#10;                        &lt;p className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                          {activity.title}&#10;                        &lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                      &lt;div className=&quot;flex items-center justify-between mt-1&quot;&gt;&#10;                        &lt;p className=&quot;text-xs text-gray-500&quot;&gt;{activity.time}&lt;/p&gt;&#10;                      &lt;/div&gt;&#10;                    &lt;/div&gt;&#10;                    &lt;Badge&#10;                      className={cn(&#10;                        &quot;text-xs p-1 ml-auto&quot;,&#10;                        activity.status === &quot;Concluído&quot;&#10;                          ? &quot;bg-green-100 text-green-700&quot;&#10;                          : &quot;bg-amber-100 text-amber-700&quot;&#10;                      )}&#10;                    &gt;&#10;                      {&#10;                        activity.status === &quot;Concluído&quot;&#10;                          ? &lt;CheckCircle className=&quot;w-4 h-4&quot;/&gt;&#10;                          : &lt;Clock className=&quot;w-4 h-4&quot;/&gt;&#10;                      }&#10;                    &lt;/Badge&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/div&gt;&#10;          &lt;div&gt;&#10;            &lt;CardHeader&gt;&#10;              &lt;CardTitle className=&quot;text-lg font-semibold flex items-center gap-2&quot;&gt;&#10;                &lt;Activity className=&quot;h-5 w-5 text-primary-600&quot;/&gt;&#10;                Status do Sistema&#10;              &lt;/CardTitle&gt;&#10;            &lt;/CardHeader&gt;&#10;            &lt;CardContent&gt;&#10;              &lt;div className=&quot;space-y-3&quot;&gt;&#10;                {systemStatus.map((system, index) =&gt; (&#10;                  &lt;div key={index} className=&quot;flex items-center justify-between&quot;&gt;&#10;                    &lt;span className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;                      {system.name}&#10;                    &lt;/span&gt;&#10;                    &lt;Badge&#10;                      variant=&quot;secondary&quot;&#10;                      className={`flex gap-1 text-xs ${&#10;                        system.status === &quot;Online&quot;&#10;                          ? &quot;bg-green-100 text-green-700&quot;&#10;                          : &quot;bg-red-100 text-red-700&quot;&#10;                      }`}&#10;                    &gt;&#10;                      &lt;div&#10;                        className={cn(&#10;                          &quot;w-1 h-1 rounded-full&quot;,&#10;                          system.status === &quot;Online&quot;&#10;                            ? &quot;bg-green-700&quot;&#10;                            : &quot;bg-red-700&quot;&#10;                        )}&#10;                      /&gt;&#10;                      {system.status}&#10;                    &lt;/Badge&gt;&#10;                  &lt;/div&gt;&#10;                ))}&#10;              &lt;/div&gt;&#10;            &lt;/CardContent&gt;&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/Card&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/layout/sidebar.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/layout/sidebar.tsx" />
              <option name="originalContent" value="&quot;use client&quot;;&#10;&#10;import { Fragment, useState, useEffect } from &quot;react&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import { usePathname } from &quot;next/navigation&quot;;&#10;import { Dialog } from &quot;@radix-ui/react-dialog&quot;;&#10;import { Transition } from &quot;@headlessui/react&quot;;&#10;import {&#10;  LayoutDashboard,&#10;  Weight,&#10;  History,&#10;  Truck,&#10;  IdCardLanyard,&#10;  Handshake,&#10;  Settings,&#10;  X, LucideIcon,&#10;} from &quot;lucide-react&quot;;&#10;import { cn } from &quot;@/lib/utils&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import Image from &quot;next/image&quot;;&#10;&#10;interface NavItem {&#10;  name: string;&#10;  href: string;&#10;  icon: LucideIcon;&#10;}&#10;&#10;const navigation: NavItem[] = [&#10;  { name: &quot;Dashboard&quot;, href: &quot;/&quot;, icon: LayoutDashboard },&#10;  { name: &quot;Pesagem Ativa&quot;, href: &quot;/weighing&quot;, icon: Weight },&#10;  { name: &quot;Histórico&quot;, href: &quot;/history&quot;, icon: History },&#10;  { name: &quot;Frota&quot;, href: &quot;/fleet&quot;, icon: Truck },&#10;  { name: &quot;Motoristas&quot;, href: &quot;/drivers&quot;, icon: IdCardLanyard },&#10;  { name: &quot;Parceiros&quot;, href: &quot;/partners&quot;, icon: Handshake },&#10;];&#10;&#10;const systemNavigation: NavItem[] = [&#10;  { name: &quot;Configurações&quot;, href: &quot;/settings&quot;, icon: Settings },&#10;];&#10;&#10;interface SidebarProps {&#10;  open: boolean;&#10;  setOpen: (open: boolean) =&gt; void;&#10;}&#10;&#10;export function Sidebar({ open, setOpen }: SidebarProps) {&#10;  const pathname = usePathname();&#10;&#10;  const selectedLinkIndex = navigation.findIndex((item) =&gt; item.href === pathname);&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;teste&quot;)&#10;  }, [])&#10;&#10;  const NavItem = ({item} : {item: NavItem}) =&gt; {&#10;    return (&#10;      &lt;Link&#10;        href={item.href}&#10;        className={cn(&#10;          &quot;flex items-center gap-x-3 py-3.5 px-6&quot;,&#10;          &quot;text-sm leading-6 text-gray-700&quot;,&#10;          &quot;transition-colors group&quot;,&#10;          &quot;hover:text-black hover:bg-gray-100&quot;,&#10;          pathname === item.href &amp;&amp; &quot;text-primary-600&quot;&#10;        )}&#10;      &gt;&#10;        &lt;item.icon&#10;          className={cn(&#10;            pathname === item.href&#10;              ? &quot;text-primary-600&quot;&#10;              : &quot;text-gray-400 group-hover:text-black&quot;,&#10;            &quot;h-5 w-5 shrink-0 transition-colors&quot;&#10;          )}&#10;          aria-hidden=&quot;true&quot;&#10;        /&gt;&#10;        {item.name}&#10;      &lt;/Link&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;flex flex-col w-[230px] z-20 fixed min-h-screen gap-y-7 bg-white shadow-lg&quot;&gt;&#10;      &lt;div className=&quot;flex items-center gap-3 px-6 pt-4 shrink-0&quot;&gt;&#10;        &lt;Image&#10;          src=&quot;/images/logo.png&quot;&#10;          alt=&quot;Logo&quot;&#10;          width={74}&#10;          height={74}&#10;          className=&quot;h-10 w-auto&quot;&#10;        /&gt;&#10;        &lt;div className=&quot;flex flex-col&quot;&gt;&#10;          &lt;h1 className=&quot;text-xl font-bold text-gray-900&quot;&gt;Semensol&lt;/h1&gt;&#10;          &lt;p className=&quot;text-xs text-gray-500 font-medium&quot;&gt;Sistema de pesagem&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav className=&quot;flex flex-col h-full gap-y-7 relative&quot;&gt;&#10;        &lt;div&#10;          style={{&#10;            top: selectedLinkIndex === 0 ? 32 : (52 * selectedLinkIndex) + 32&#10;          }}&#10;          className=&quot;&#10;            absolute bg-primary-100 w-full h-[52px]&#10;            border-l-4 border-primary-500&#10;            transition-all duration-300&#10;            z-0&#10;          &quot;&#10;        /&gt;&#10;        &lt;div&gt;&#10;          &lt;div className=&quot;text-xs font-semibold leading-6 text-gray-400 uppercase tracking-wider px-6&quot;&gt;&#10;            OPERAÇÕES&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;mt-2&quot;&gt;&#10;            {navigation.map((item) =&gt; &lt;NavItem key={item.name} item={item} /&gt;)}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;mt-auto&quot;&gt;&#10;          &lt;div className=&quot;text-xs font-semibold leading-6 text-gray-400 uppercase tracking-wider px-6&quot;&gt;&#10;            SISTEMA&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;mt-2&quot;&gt;&#10;            {systemNavigation.map((item) =&gt; &lt;NavItem key={item.name} item={item} /&gt;)}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/nav&gt;&#10;      &lt;div className=&quot;flex flex-col mt-auto&quot;&gt;&#10;        &lt;div className=&quot;text-xs font-semibold leading-6 text-gray-400 uppercase tracking-wider px-6&quot;&gt;&#10;          STATUS&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;flex items-center gap-3 mb-2 mt-auto px-6 py-4&quot;&gt;&#10;          &lt;div className=&quot;h-2 w-2 rounded-full bg-green-500&quot;&gt;&lt;/div&gt;&#10;          &lt;span className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;            Sistema Online&#10;          &lt;/span&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
              <option name="updatedContent" value="&quot;use client&quot;;&#10;&#10;import { Fragment, useState, useEffect } from &quot;react&quot;;&#10;import Link from &quot;next/link&quot;;&#10;import { usePathname } from &quot;next/navigation&quot;;&#10;import { Dialog } from &quot;@radix-ui/react-dialog&quot;;&#10;import { Transition } from &quot;@headlessui/react&quot;;&#10;import {&#10;  LayoutDashboard,&#10;  Weight,&#10;  History,&#10;  Truck,&#10;  IdCardLanyard,&#10;  Handshake,&#10;  Settings,&#10;  X, LucideIcon,&#10;} from &quot;lucide-react&quot;;&#10;import { cn } from &quot;@/lib/utils&quot;;&#10;import { Button } from &quot;@/components/ui/button&quot;;&#10;import Image from &quot;next/image&quot;;&#10;&#10;interface NavItem {&#10;  name: string;&#10;  href: string;&#10;  icon: LucideIcon;&#10;}&#10;&#10;const navigation: NavItem[] = [&#10;  { name: &quot;Dashboard&quot;, href: &quot;/&quot;, icon: LayoutDashboard },&#10;  { name: &quot;Pesagem Ativa&quot;, href: &quot;/weighing&quot;, icon: Weight },&#10;  { name: &quot;Histórico&quot;, href: &quot;/history&quot;, icon: History },&#10;  { name: &quot;Frota&quot;, href: &quot;/fleet&quot;, icon: Truck },&#10;  { name: &quot;Motoristas&quot;, href: &quot;/drivers&quot;, icon: IdCardLanyard },&#10;  { name: &quot;Parceiros&quot;, href: &quot;/partners&quot;, icon: Handshake },&#10;];&#10;&#10;const systemNavigation: NavItem[] = [&#10;  { name: &quot;Configurações&quot;, href: &quot;/settings&quot;, icon: Settings },&#10;];&#10;&#10;interface SidebarProps {&#10;  open: boolean;&#10;  setOpen: (open: boolean) =&gt; void;&#10;}&#10;&#10;export function Sidebar({ open, setOpen }: SidebarProps) {&#10;  const pathname = usePathname();&#10;&#10;  const selectedLinkIndex = navigation.findIndex((item) =&gt; item.href === pathname);&#10;&#10;  useEffect(() =&gt; {&#10;    console.log(&quot;teste&quot;)&#10;  }, [])&#10;&#10;  const NavItem = ({item} : {item: NavItem}) =&gt; {&#10;    return (&#10;      &lt;Link&#10;        href={item.href}&#10;        className={cn(&#10;          &quot;flex items-center gap-x-3 py-3.5 px-6&quot;,&#10;          &quot;text-sm leading-6 text-gray-700&quot;,&#10;          &quot;transition-colors group&quot;,&#10;          &quot;hover:text-black hover:bg-gray-100&quot;,&#10;          pathname === item.href &amp;&amp; &quot;text-primary-600&quot;&#10;        )}&#10;      &gt;&#10;        &lt;item.icon&#10;          className={cn(&#10;            pathname === item.href&#10;              ? &quot;text-primary-600&quot;&#10;              : &quot;text-gray-400 group-hover:text-black&quot;,&#10;            &quot;h-5 w-5 shrink-0 transition-colors&quot;&#10;          )}&#10;          aria-hidden=&quot;true&quot;&#10;        /&gt;&#10;        {item.name}&#10;      &lt;/Link&gt;&#10;    )&#10;  }&#10;&#10;  return (&#10;    &lt;div className=&quot;flex flex-col w-[230px] z-20 fixed min-h-screen gap-y-7 bg-white shadow-lg&quot;&gt;&#10;      &lt;div className=&quot;flex items-center gap-3 px-6 pt-4 shrink-0&quot;&gt;&#10;        &lt;Image&#10;          src=&quot;/images/logo.png&quot;&#10;          alt=&quot;Logo&quot;&#10;          width={74}&#10;          height={74}&#10;          className=&quot;h-10 w-auto&quot;&#10;        /&gt;&#10;        &lt;div className=&quot;flex flex-col&quot;&gt;&#10;          &lt;h1 className=&quot;text-xl font-bold text-gray-900&quot;&gt;Semensol&lt;/h1&gt;&#10;          &lt;p className=&quot;text-xs text-gray-500 font-medium&quot;&gt;Sistema de pesagem&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;      &lt;nav className=&quot;flex flex-col h-full gap-y-7 relative&quot;&gt;&#10;        &lt;div&#10;          style={{&#10;            top: selectedLinkIndex === 0 ? 32 : (52 * selectedLinkIndex) + 32&#10;          }}&#10;          className=&quot;&#10;            absolute bg-primary-100 w-full h-[52px]&#10;            border-l-4 border-primary-500&#10;            transition-all duration-300&#10;            z-0&#10;          &quot;&#10;        /&gt;&#10;        &lt;div&gt;&#10;          &lt;div className=&quot;text-xs font-semibold leading-6 text-gray-400 uppercase tracking-wider px-6&quot;&gt;&#10;            OPERAÇÕES&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;mt-2&quot;&gt;&#10;            {navigation.map((item) =&gt; &lt;NavItem key={item.name} item={item} /&gt;)}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;mt-auto&quot;&gt;&#10;          &lt;div className=&quot;text-xs font-semibold leading-6 text-gray-400 uppercase tracking-wider px-6&quot;&gt;&#10;            SISTEMA&#10;          &lt;/div&gt;&#10;          &lt;div className=&quot;mt-2&quot;&gt;&#10;            {systemNavigation.map((item) =&gt; &lt;NavItem key={item.name} item={item} /&gt;)}&#10;          &lt;/div&gt;&#10;        &lt;/div&gt;&#10;      &lt;/nav&gt;&#10;      &lt;div className=&quot;flex flex-col mt-auto&quot;&gt;&#10;        &lt;div className=&quot;text-xs font-semibold leading-6 text-gray-400 uppercase tracking-wider px-6&quot;&gt;&#10;          STATUS&#10;        &lt;/div&gt;&#10;        &lt;div className=&quot;flex items-center gap-3 mb-2 mt-auto px-6 py-4&quot;&gt;&#10;          &lt;div className=&quot;h-2 w-2 rounded-full bg-green-500&quot;&gt;&lt;/div&gt;&#10;          &lt;span className=&quot;text-sm font-medium text-gray-900&quot;&gt;&#10;            Sistema Online&#10;          &lt;/span&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>